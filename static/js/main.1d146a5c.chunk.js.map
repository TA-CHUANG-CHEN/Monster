{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monsters","monster","className","alt","src","id","name","email","CardList","filterMonsters","map","SearchBox","placeholder","handleChange","type","onChange","App","props","onSearchChange","e","setState","searchField","target","value","state","fetch","method","then","response","status","json","users","catch","error","alert","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAgBeA,EAbF,SAACC,GAAc,IAClBC,EAAYD,EAAZC,QACR,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,gCAEL,6BAAKJ,EAAQK,OACb,6BAAKL,EAAQM,YCGJC,EAXE,SAACC,GAAoB,IAC5BT,EAAaS,EAAbT,SACR,OACE,qBAAKE,UAAU,YAAf,SACGF,EAASU,KAAI,SAACT,GACb,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCKnBM,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0CDG,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BAEjB,cAAMA,IAoBRC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SApBtC,EAAKC,MAAQ,CACXxB,SAAU,GACVqB,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBI,MAAM,6CAA8C,CAAEC,OAAQ,QAC3DC,MAAK,SAACC,GACL,OAAwB,MAApBA,EAASC,OACJD,EAASE,OAEXF,KAERD,MAAK,SAACI,GAAD,OAAW,EAAKX,SAAS,CAAEpB,SAAU+B,OAE1CC,OAAM,SAACC,GAAD,OAAWC,MAAM,YAAD,OAAaD,S,oBAOxC,WAAU,IAAD,EAC2BE,KAAKX,MAA/BxB,EADD,EACCA,SAAUqB,EADX,EACWA,YACZZ,EAAiBT,EAASoC,QAAO,SAACnC,GAAD,OACrCA,EAAQK,KAAK+B,cAAcC,SAASjB,EAAYgB,kBAElD,OACE,sBAAKnC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAcsB,KAAKjB,iBAErB,cAAC,EAAD,CAAUlB,SAAUS,W,GAxCV8B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1d146a5c.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nconst Card = (monsters) => {\n  const { monster } = monsters\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${monster.id}.png?set=set2&size=180x180`}\n      />\n      <h1>{monster.name}</h1>\n      <h2>{monster.email}</h2>\n    </div>\n  )\n}\nexport default Card\n","import React from 'react'\nimport './card-list.styles.css'\nimport Card from '../card/card.component'\n\nconst CardList = (filterMonsters) => {\n  const { monsters } = filterMonsters\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />\n      })}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\nimport './search-box.styles.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default SearchBox\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react'\nimport './App.css'\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/search-box/search-box.component'\n\nclass App extends Component {\n  // let APP (still a function )can inherit method from Component (it actually through prototype)\n  constructor(props) {\n    // same mean as function but inside is read-only\n    super(props) // only exist in constructor(), lock this in class function\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users', { method: 'get' })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json()\n        }\n        return response\n      })\n      .then((users) => this.setState({ monsters: users }))\n      // eslint-disable-next-line\n      .catch((error) => alert(`fuck,show${error}`))\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Monster Roldex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.onSearchChange}\n        />\n        <CardList monsters={filterMonsters} />\n      </div>\n    )\n  }\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}